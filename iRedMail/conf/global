#!/usr/bin/env bash

# Author:   Zhang Huangbin (zhb _at_ iredmail.org)

#---------------------------------------------------------------------
# This file is part of iRedMail, which is an open source mail server
# solution for Red Hat(R) Enterprise Linux, CentOS, Debian and Ubuntu.
#
# iRedMail is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# iRedMail is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with iRedMail.  If not, see <http://www.gnu.org/licenses/>.
#---------------------------------------------------------------------

export PROG_NAME='iRedMail'
export PROG_NAME_LOWERCASE='iredmail'
export PROG_VERSION='0.9.2'

export DATE="$(/bin/date +%Y.%m.%d.%H.%M.%S)"

# For perl and run-time locale setting.
export LC_ALL=C

# Debug mode: YES, NO.
export IREDMAIL_DEBUG="${IREDMAIL_DEBUG:=NO}"

# -----------------
# ---- Generic ----
# -----------------

# Maildir format: Maildir. Mbox format was deprecated since version 0.7.3.
export MAILBOX_FORMAT='Maildir'

# Maildir style: hashed, normal.
export MAILDIR_STYLE='hashed'

# Current storage node.
export STORAGE_NODE='vmail1'

# For better distributed deployment
#
# IP address of localhost.
# Usually it's 127.0.0.1, but not in FreeBSD Jail.
export LOCAL_ADDRESS="${LOCAL_ADDRESS:=127.0.0.1}"

# Hostname or IP address used in MySQL GRANT command (allow remote access from
# this hostname/IP).
# Usually it's 'localhost', but not in FreeBSD Jail (use ${LOCAL_ADDRESS} or
# hostname of Jail instead).
if [ X"${LOCAL_ADDRESS}" == X'127.0.0.1' ]; then
    # Pre-define MYSQL_GRANT_HOST while running iRedMail to use a remote MySQL
    # server. For example:
    # MYSQL_GRANT_HOST='192.168.1.2' bash iRedMail.sh
    export MYSQL_GRANT_HOST="${MYSQL_GRANT_HOST:=localhost}"
else
    export MYSQL_GRANT_HOST="${LOCAL_ADDRESS}"
fi

# Dovecot: POP3, IMAP, managesieve
export IMAP_SERVER="${LOCAL_ADDRESS}"
export MANAGESIEVE_BIND_HOST="${LOCAL_ADDRESS}"
export MANAGESIEVE_PORT='4190'
# SMTP server (Postfix)
export SMTP_SERVER="${LOCAL_ADDRESS}"
# Amavisd
export AMAVISD_SERVER="${LOCAL_ADDRESS}"
# Policyd or Cluebringer
export POLICYD_BIND_HOST="${LOCAL_ADDRESS}"
export CLUEBRINGER_BIND_HOST="${LOCAL_ADDRESS}"
# ClamAV
export CLAMD_BIND_HOST="${LOCAL_ADDRESS}"
# iRedAPD
export IREDAPD_BIND_HOST="${LOCAL_ADDRESS}"
# Memcached
export MEMCACHED_BIND_HOST="${LOCAL_ADDRESS}"

# For managesieve service and software.
export USE_MANAGESIEVE='YES'    # Use managesieve service.

# vmail user/group name, uid and gid.
export VMAIL_USER_NAME='vmail'
export VMAIL_GROUP_NAME='vmail'

# Specify UID/GID for system accounts: vmail, iredadmin, iredapd.
# Required by cluster environment. e.g. GlusterFS.
export VMAIL_USER_UID='2000'
export VMAIL_USER_GID='2000'
export IREDAPD_DAEMON_USER_UID='2002'
export IREDAPD_DAEMON_USER_GID='2002'

# Note: config file will be sourced in file 'conf/core', function 'check_env()'.
export IREDMAIL_CONFIG_FILE="${ROOTDIR}/config"
export TIP_FILE="${ROOTDIR}/${PROG_NAME}.tips"
export RUNTIME_DIR="${ROOTDIR}/runtime"
export STATUS_FILE="${RUNTIME_DIR}/install.status"
export INSTALL_LOG="${RUNTIME_DIR}/install.log"


# Output flag.
export _INFO_FLAG="[ INFO ]"
export _SKIP_FLAG="< SKIP >"
export _ERROR_FLAG="<< ERROR >>"
export _QUESTION_FLAG="< Question >"
export _BACKUP_FLAG=" + < Backup >"
export _DEBUG_FLAG=" + < DEBUG >"

export CONF_MSG="#
# File generated by ${PROG_NAME} (${DATE}):
#
# Version:  ${PROG_VERSION}
# Project:  http://www.iredmail.org/
#
# Community: http://www.iredmail.org/forum/
#
"

# TERM.
if [ X"${TERM}" == X"" ]; then
    export TERM='xterm'
fi

# Logrotate configuration directory.
export LOGROTATE_DIR='/etc/logrotate.d'

# Kernel name, in upper cases.
export KERNEL_NAME="$(uname -s | tr '[a-z]' '[A-Z]')"

# Hostname.
export HOSTNAME="$(hostname -f)"
export IP_ADDRESS="$(hostname -i && dig +short myip.opendns.com @resolver1.opendns.com)"
# Genrate a random string.
# Usage:
#   str="$(${RANDOM_STRING})"
export RANDOM_STRING='eval </dev/urandom tr -dc A-Za-z0-9 | (head -c $1 &>/dev/null || head -c 30)'


# command: bzip2.
export BIN_BZIP2='bzip2'
export PKG_BZIP2='bzip2'

# Shells
export SHELL_NOLOGIN='/sbin/nologin'
export SHELL_BASH='/bin/bash'

# Check hardware architecture.
arch="$(uname -m)"
case $arch in
    i[3456]86) export OS_ARCH='i386' ;;
    x86_64|amd64) export OS_ARCH='x86_64' ;;
    armv6l|arm7l|armv7l)
        # Debian ARM platform and Raspberry Pi.
        export OS_ARCH='armhf' ;;
    *)
        echo "Your architecture is not supported yet: ${arch}."
        echo "Both i386 and x86_64 are supported by ${PROG_NAME}."
        exit 255
        ;;
esac

# Path to python program file.
export PYTHON_BIN='python'

# Default password scheme for SQL backends.
# LDAP backend will use SSHA instead (defined in file
# dialog/config_via_dialog.sh), because many applications need to bind as user.
export DEFAULT_PASSWORD_SCHEME='SSHA512'

# Check distribution.
#   - DISTRO
#   - DISTRO_VERSION
#   - DISTRO_CODENAME
#
# UNSUPPORTED_RELEASE will be set to 'YES' if current Linux/BSD release is
# an old release and unsupported anymore.
if [ X"${KERNEL_NAME}" == X"LINUX" ]; then
    # Directory of RC scripts.
    export DIR_RC_SCRIPTS='/etc/init.d'

    # RHEL/CentOS
    export DISTRO='RHEL'

    # Get distribution version
    if grep '\ 6' /etc/redhat-release &>/dev/null; then
        # version 6.x
        export DISTRO_VERSION='6'
    elif grep '\ 7' /etc/redhat-release &>/dev/null; then
        # version 7.x
        export DISTRO_VERSION='7'
    else
        export UNSUPPORTED_RELEASE='YES'
    fi

    # Get distribution name as DISTRO_CODENAME
    if grep '^Red' /etc/redhat-release &>/dev/null; then
        # RHEL
        export DISTRO_CODENAME='rhel'
    elif grep '^CentOS' /etc/redhat-release &>/dev/null; then
        # CentOS
        export DISTRO_CODENAME='centos'
    else
        export UNSUPPORTED_RELEASE='YES'
    fi

else
    # Not support *BSD and other distrobutions yet.
    echo "Error: Your OS is not supported yet."
    exit 255
fi

# Exit and prompt to use a supported Linux/BSD distribution
if [ X"${UNSUPPORTED_RELEASE}" == X'YES' ]; then
    cat <<EOF
********* ERROR *********
Release version of the operating system on this server is unsupported by
iRedMail, please access below link to get the latest iRedMail and a list
of supported Linux/BSD distributions and release versions.

http://www.iredmail.org/download.html

*************************
EOF

    exit 255
fi

# System user: root. Note: not all OSes have group 'root'.
export SYS_ROOT_USER='root'
export SYS_ROOT_GROUP='root'

# Use systemd
export USE_SYSTEMD='NO'

# install_pkg: function used to install packages without confirm.
# remove_pkg: function used to remove packages without confirm.
# LIST_ALL_PKGS: command used to list all installed packages.
# LIST_FILES_IN_PKG: command used to list files installed by special package.

# RHEL/CentOS.
# Package management.
if [ X"${YUM}" != X"" ]; then
    export YUM="${YUM}"
else
    export YUM="yum -d 2"
fi
export install_pkg='install_pkg_rhel'
export remove_pkg="remove_pkg_rhel"
export LIST_ALL_PKGS='rpm -qa'
export LIST_FILES_IN_PKG='rpm -ql'

# Directory /etc/sysconfig/ on RHEL/CentOS.
export ETC_SYSCONFIG_DIR='/etc/sysconfig'

if [ X"${DISTRO_VERSION}" == X'6' ]; then
        ENABLE_BACKEND_MYSQL='YES'
        ENABLE_BACKEND_MARIADB='NO'

        # iptables rule file.
        export FIREWALL_RULE_CONF="${ETC_SYSCONFIG_DIR}/iptables"
    else
        export USE_SYSTEMD='YES'

        # iptables rule file.
        export USE_FIREWALLD='YES'
        export FIREWALLD_CONF_DIR='/etc/firewalld'
        export FIREWALLD_CONF='/etc/firewalld/firewalld.conf'
        export FIREWALL_RULE_CONF="${FIREWALLD_CONF_DIR}/zones/iredmail.xml"
    fi

# Syslog config file: rsyslog.
export SYSLOG_CONF='/etc/rsyslog.conf'
export SYSLOG_POSTROTATE_CMD='/bin/kill -HUP $(cat /var/run/syslogd.pid 2>/dev/null) 2>/dev/null || true'

# SSHD log file
export SSHD_LOGFILE='/var/log/secure'

# Crontab related.
export CRON_SPOOL_DIR='/var/spool/cron'

# Directory used to store SSL/TLS key/cert file.
export SSL_FILE_DIR="/etc/pki/tls"

# Yum repository related.
export YUM_REPOS_DIR='/etc/yum.repos.d'
export LOCAL_REPO_NAME="${PROG_NAME}"
export LOCAL_REPO_FILE="${YUM_REPOS_DIR}/${LOCAL_REPO_NAME}.repo"

# Override default value.
export PKG_DIALOG="dialog"
export PKG_BZIP2="bzip2"

# Use a seperated directory to store iRedMail certs/keys.
export SSL_CERT_DIR="${SSL_FILE_DIR}/mailserver"
export SSL_KEY_DIR="${SSL_FILE_DIR}/mailserver"
# dhparam file required to fix 'The Logjam Attack'.
export SSL_DHPARAM_FILE="${SSL_FILE_DIR}/dhparams.pem"
export SSL_CIPHERS='ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA'


# SSL key.
export OPENSSL_CONF="${SSL_FILE_DIR}/openssl.cnf"
export SSL_CERT_FILE="${SSL_CERT_DIR}/mail.onlyoffice.crt"
export SSL_KEY_FILE="${SSL_KEY_DIR}/mail.onlyoffice.key"
export SSL_CA_BUNDLE_FILE="${SSL_CERT_DIR}/mail.onlyoffice.ca-bundle"
export TLS_COUNTRY='CN'
export TLS_STATE='GuangDong'
export TLS_CITY='ShenZhen'
export TLS_COMPANY="${HOSTNAME}"
export TLS_DEPARTMENT='IT'
export TLS_HOSTNAME="${HOSTNAME}"
export TLS_ADMIN="root@${HOSTNAME}"

# Default SSL key size in bits
export SSL_KEY_SIZE='2048'

# Location of sshd_config
export SSHD_CONFIG='/etc/ssh/sshd_config'

# SQL databases which need to be backed up.
export MYSQL_BACKUP_DATABASES=''

# Command use to fetch source tarballs.
# -c: Continue getting a partially-downloaded file.
# -q: Turn off Wget's output.
FETCH_CMD="wget -cq"